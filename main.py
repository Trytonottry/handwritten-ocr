# main.py
from config import *
from modules.pdf_converter import convert_pdf_to_images
from modules.preprocessing import preprocess_page
from modules.ocr_engine import OCREngine
from modules.exporter import save_as_txt, save_as_docx
import os
import cv2

def main():
    # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫—É –¥–ª—è –≤—ã–≤–æ–¥–∞
    os.makedirs(OUTPUT_DIR, exist_ok=True)
    txt_path = os.path.join(OUTPUT_DIR, "recognized.txt")
    docx_path = os.path.join(OUTPUT_DIR, "recognized.docx")

    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è PDF ‚Üí –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    try:
        pages = convert_pdf_to_images(PDF_PATH, dpi=PDF_DPI)
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ PDF:", e)
        return

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è OCR
    ocr = OCREngine(languages=LANGUAGES, gpu=GPU)

    # –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    all_results = []

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–∞–∂–¥–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    for page_num, pil_image in enumerate(pages, 1):
        print(f"\nüîÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page_num}...")
        
        # –ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞
        processed = preprocess_page(pil_image)
        
        # OCR
        result = ocr.recognize(processed, threshold=OCR_THRESHOLD, min_length=MIN_TEXT_LENGTH)
        all_results.append(result)
        
        print(f"  –ù–∞–π–¥–µ–Ω–æ —Å—Ç—Ä–æ–∫: {len(result)}")

    # –≠–∫—Å–ø–æ—Ä—Ç
    save_as_txt(all_results, txt_path)
    save_as_docx(all_results, docx_path)

    print("\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ: ./{OUTPUT_DIR}/")

if __name__ == "__main__":
    main()